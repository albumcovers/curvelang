# Curve programming language

import yaml
import flask
import sys
import webbrowser
import os

# Get the file names from the command line arguments
file_name = sys.argv[1]
config_file_name = sys.argv[2]

# Open the files
file = open(file_name, 'r')
config = yaml.safe_load(open(config_file_name, 'r'))

# Get the project title from the config
title = config['project']['title']
code = ''
head = ''
defaultCss = False
jsDep = []
cssDep = []
webbrowserOpen = True
liveServer = False

# Check for optional settings
try:
    defaultCss = config['project']['disableDefaultCSS']
except KeyError:
    pass

try:
    jsDep = config['project']['jsDependencies']
except KeyError:
    pass

try:
    cssDep = config['project']['jsDependencies']
except KeyError:
    pass

try:
    webbrowserOpen = config['project']['webbrowser']
except KeyError:
    pass

try:
    liveServer = config['project']['liveServer']
except KeyError:
    pass

for dep in jsDep:
    head += f"""<script src="{dep}"></script>\n"""
for dep in cssDep:
    head += f"""<link rel="stylesheet" href="{dep}">"""

# Process each line in the file
for line in file.readlines():
    if line.startswith('%'):
        line = line.strip().replace('%', '')
        element_name = line.split(' ')[0]
        content = line.split('"')[1]
        attribut_es = ""
        rest_of_line = line.split(content + " ")
        attributes = rest_of_line[0].split(':')
        
        if attributes[0] == rest_of_line[0]:
            attributes = []
        
        for attribute in attributes:
            attribut_es += attribute
        
        if element_name not in ['link', 'br', 'hr']:
            code += f'<{element_name} {attribut_es}>{content}</{element_name}>\n'
    
    elif line.startswith('-->'):
        line = line.strip().replace('-->', '', 1)
        code += f"<style>{line}</style>\n"
    
    elif line.startswith('==>'):
        line = line.strip().replace('==>', '')
        line = line.replace('id(', 'document.getElementById(')
        line = line.replace('on(', 'addEventListener(')
        line = line.replace(".value", '.innerHTML')
        line = line.replace('func{', '() => {')
        line = line.replace('@', 'var ')
        code += f"<script>{line}</script>\n"

# Add default CSS if not disabled
if not defaultCss:
    cssTag = '<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/alvaromontoro/almond.css@latest/dist/almond.min.css" />'
else:
    cssTag = ''

# Create the HTML content
temp = f'''
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>
    {head}
    {cssTag}
</head>
<body>
    {code}
</body>
</html>
'''

# Get the directory path
dir_path = os.path.dirname(os.path.realpath(__file__))

# Create the 'dist' directory if it doesn't exist and write the HTML file
os.makedirs('dist', exist_ok=True)
with open('dist/out.html', 'w') as out_file:
    out_file.write(temp)

app=flask.Flask(__name__)
@app.route('/')
def index():
    return flask.send_from_directory('dist', 'out.html')

# Open the output HTML file in the default web browser
if webbrowserOpen:
    webbrowser.open(os.path.join(dir_path, 'dist', 'out.html'))
if liveServer:
    app.run('localhost', port=1990, debug=True)
